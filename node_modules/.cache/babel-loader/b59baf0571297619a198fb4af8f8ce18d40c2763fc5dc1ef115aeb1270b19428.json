{"ast":null,"code":"var _jsxFileName = \"D:\\\\Magnus Mage\\\\React\\\\Http request\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  async function fetchMoviesHandler() {\n    setIsLoading(true);\n    const response = await fetch('https://swapi.dev/api/films/');\n    const data = await response.json();\n\n    // console.log(data.results);\n    const transformedMovies = data.results.map(movieData => {\n      return {\n        id: movieData.episode_id,\n        title: movieData.title,\n        openingText: movieData.opening_crawl,\n        releaseDate: movieData.release_date\n      };\n    });\n    // setMovies(data.results);\n    setMovies(transformedMovies);\n    setIsLoading(false);\n    console.log('Movie handler runs');\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: !isLoading && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lmFDipV6Dz9OkGnVrFLaos+CrHY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","fetchMoviesHandler","response","fetch","data","json","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","console","log","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Magnus Mage/React/Http request/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n\n  const [movies , setMovies] = useState([]);\n  const [isLoading , setIsLoading] = useState(false);\n\n\n  async function fetchMoviesHandler() {\n    setIsLoading(true);\n\n   const response = await fetch('https://swapi.dev/api/films/');\n\n   const data = await response.json();\n   \n      // console.log(data.results);\n      const transformedMovies = data.results.map((movieData) =>  {\n        return {\n          id : movieData.episode_id,\n          title : movieData.title,\n          openingText : movieData.opening_crawl,\n          releaseDate : movieData.release_date\n        };\n      })\n      // setMovies(data.results);\n      setMovies(transformedMovies);\n      setIsLoading(false);\n    \n    console.log('Movie handler runs');\n  }\n\n\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        { !isLoading && <MoviesList movies={movies} />}\n        \n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,MAAM,EAAGC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAM,CAACQ,SAAS,EAAGC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAGlD,eAAeU,kBAAkBA,CAAA,EAAG;IAClCD,YAAY,CAAC,IAAI,CAAC;IAEnB,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;IAE5D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;;IAE/B;IACA,MAAMC,iBAAiB,GAAGF,IAAI,CAACG,OAAO,CAACC,GAAG,CAAEC,SAAS,IAAM;MACzD,OAAO;QACLC,EAAE,EAAGD,SAAS,CAACE,UAAU;QACzBC,KAAK,EAAGH,SAAS,CAACG,KAAK;QACvBC,WAAW,EAAGJ,SAAS,CAACK,aAAa;QACrCC,WAAW,EAAGN,SAAS,CAACO;MAC1B,CAAC;IACH,CAAC,CAAC;IACF;IACAlB,SAAS,CAACQ,iBAAiB,CAAC;IAC5BN,YAAY,CAAC,KAAK,CAAC;IAErBiB,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EACnC;EAIA,oBACExB,OAAA,CAACJ,KAAK,CAAC6B,QAAQ;IAAAC,QAAA,gBACb1B,OAAA;MAAA0B,QAAA,eACE1B,OAAA;QAAQ2B,OAAO,EAAEpB,kBAAmB;QAAAmB,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAClD,eACV/B,OAAA;MAAA0B,QAAA,EACI,CAACrB,SAAS,iBAAIL,OAAA,CAACF,UAAU;QAACK,MAAM,EAAEA;MAAO;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEtC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACK;AAErB;AAAC7B,EAAA,CA1CQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}